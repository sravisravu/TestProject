package org.talend.designer.codegen.translators.data_quality.address.loqate;

import org.talend.core.model.process.INode;
import org.talend.designer.codegen.config.CodeGeneratorArgument;
import org.talend.core.model.process.ElementParameterParser;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;

public class TLoqateAddressRowBeginJava
{
  protected static String nl;
  public static synchronized TLoqateAddressRowBeginJava create(String lineSeparator)
  {
    nl = lineSeparator;
    TLoqateAddressRowBeginJava result = new TLoqateAddressRowBeginJava();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = " " + NL + "" + NL + "  try {" + NL + "      System.loadLibrary(\"lqtjava\");" + NL + "  } catch (UnsatisfiedLinkError e) {" + NL + "      System.err.println(\"Native code library \" + \"failed to load.\\nMake sure you correctly defined the java.library.path VM property in the Job advanced settings like: java.library.path=\\\"<loqate installation path>\\\"\");" + NL + "      e.printStackTrace();" + NL + "  }   " + NL + "  " + NL + "  com.loqate.lqtServer lqtServer_";
  protected final String TEXT_2 = " = com.loqate.lqtServer.create();" + NL + "  com.loqate.lqtInputRecord lqtInputRecord_";
  protected final String TEXT_3 = " = com.loqate.lqtInputRecord.create();       " + NL + "  com.loqate.lqtProcessResult lqtProcessResult_";
  protected final String TEXT_4 = " = com.loqate.lqtProcessResult.create();" + NL + "" + NL + "  lqtServer_";
  protected final String TEXT_5 = ".init(";
  protected final String TEXT_6 = ");" + NL + "  " + NL + "  lqtServer_";
  protected final String TEXT_7 = ".setOption(\"AddressLineSeparator\", ";
  protected final String TEXT_8 = ");" + NL + "  lqtServer_";
  protected final String TEXT_9 = ".setOption(\"OutputScript\", \"";
  protected final String TEXT_10 = "\");" + NL + "  if (!\"DEFAULT\".equals(\"";
  protected final String TEXT_11 = "\")) {" + NL + "    lqtServer_";
  protected final String TEXT_12 = ".setOption(\"DefaultCountry\", \"";
  protected final String TEXT_13 = "\");" + NL + "  }" + NL + "  if (!\"DEFAULT\".equals(\"";
  protected final String TEXT_14 = "\")) {" + NL + "    lqtServer_";
  protected final String TEXT_15 = ".setOption(\"ForceCountry\", \"";
  protected final String TEXT_16 = "\");" + NL + "  }" + NL + "  lqtServer_";
  protected final String TEXT_17 = ".setOption(\"MinimumMatchscore\", ";
  protected final String TEXT_18 = ");" + NL + "  " + NL + "  int session_";
  protected final String TEXT_19 = " = lqtServer_";
  protected final String TEXT_20 = ".open();" + NL + "                                                               " + NL + "  com.loqate.lqtProcessList lqtProcessList_";
  protected final String TEXT_21 = " = com.loqate.lqtProcessList.create();       " + NL + "  com.loqate.lqtProcessOptions lqtProcessOptions_";
  protected final String TEXT_22 = " = com.loqate.lqtProcessOptions.create();" + NL + "" + NL + "  java.util.ArrayList geocodeTagList_";
  protected final String TEXT_23 = " = new java.util.ArrayList();" + NL + "  geocodeTagList_";
  protected final String TEXT_24 = ".add(\"Latitude\");" + NL + "  geocodeTagList_";
  protected final String TEXT_25 = ".add(\"Longitude\");" + NL + "  geocodeTagList_";
  protected final String TEXT_26 = ".add(\"GeoAccuracy\");" + NL + "  geocodeTagList_";
  protected final String TEXT_27 = ".add(\"GeoDistance\");" + NL + "" + NL + "  java.util.ArrayList verifyTagList_";
  protected final String TEXT_28 = " = new java.util.ArrayList();" + NL + "  verifyTagList_";
  protected final String TEXT_29 = ".add(\"Address\");" + NL + "  verifyTagList_";
  protected final String TEXT_30 = ".add(\"Address1\");" + NL + "  verifyTagList_";
  protected final String TEXT_31 = ".add(\"Address2\");" + NL + "  verifyTagList_";
  protected final String TEXT_32 = ".add(\"Address3\");" + NL + "  verifyTagList_";
  protected final String TEXT_33 = ".add(\"Address4\");" + NL + "  verifyTagList_";
  protected final String TEXT_34 = ".add(\"Address5\");" + NL + "  verifyTagList_";
  protected final String TEXT_35 = ".add(\"Address6\");" + NL + "  verifyTagList_";
  protected final String TEXT_36 = ".add(\"Address7\");" + NL + "  verifyTagList_";
  protected final String TEXT_37 = ".add(\"Address8\");" + NL + "  verifyTagList_";
  protected final String TEXT_38 = ".add(\"Address9\");" + NL + "  verifyTagList_";
  protected final String TEXT_39 = ".add(\"Address10\");" + NL + "  verifyTagList_";
  protected final String TEXT_40 = ".add(\"Address11\");" + NL + "  verifyTagList_";
  protected final String TEXT_41 = ".add(\"Address12\");" + NL + "  verifyTagList_";
  protected final String TEXT_42 = ".add(\"DeliveryAddress\");" + NL + "  verifyTagList_";
  protected final String TEXT_43 = ".add(\"DeliveryAddress1\");" + NL + "  verifyTagList_";
  protected final String TEXT_44 = ".add(\"DeliveryAddress2\");" + NL + "  verifyTagList_";
  protected final String TEXT_45 = ".add(\"DeliveryAddress3\");" + NL + "  verifyTagList_";
  protected final String TEXT_46 = ".add(\"DeliveryAddress4\");" + NL + "  verifyTagList_";
  protected final String TEXT_47 = ".add(\"DeliveryAddress5\");" + NL + "  verifyTagList_";
  protected final String TEXT_48 = ".add(\"DeliveryAddress6\");" + NL + "  verifyTagList_";
  protected final String TEXT_49 = ".add(\"DeliveryAddress7\");" + NL + "  verifyTagList_";
  protected final String TEXT_50 = ".add(\"DeliveryAddress8\");" + NL + "  verifyTagList_";
  protected final String TEXT_51 = ".add(\"DeliveryAddress9\");" + NL + "  verifyTagList_";
  protected final String TEXT_52 = ".add(\"DeliveryAddress10\");" + NL + "  verifyTagList_";
  protected final String TEXT_53 = ".add(\"DeliveryAddress11\");" + NL + "  verifyTagList_";
  protected final String TEXT_54 = ".add(\"DeliveryAddress12\");" + NL + "  verifyTagList_";
  protected final String TEXT_55 = ".add(\"CountryName\");     " + NL + "  verifyTagList_";
  protected final String TEXT_56 = ".add(\"ISO3166-2\");     " + NL + "  verifyTagList_";
  protected final String TEXT_57 = ".add(\"ISO3166-3\");     " + NL + "  verifyTagList_";
  protected final String TEXT_58 = ".add(\"ISO3166-N\");     " + NL + "  verifyTagList_";
  protected final String TEXT_59 = ".add(\"SuperAdministrativeArea\");     " + NL + "  verifyTagList_";
  protected final String TEXT_60 = ".add(\"AdministrativeArea\");     " + NL + "  verifyTagList_";
  protected final String TEXT_61 = ".add(\"SubAdministrativeArea\");     " + NL + "  verifyTagList_";
  protected final String TEXT_62 = ".add(\"Locality\");     " + NL + "  verifyTagList_";
  protected final String TEXT_63 = ".add(\"DependentLocality\");     " + NL + "  verifyTagList_";
  protected final String TEXT_64 = ".add(\"DoubleDependentLocality\");     " + NL + "  verifyTagList_";
  protected final String TEXT_65 = ".add(\"Thoroughfare\");     " + NL + "  verifyTagList_";
  protected final String TEXT_66 = ".add(\"DependentThoroughfare\");     " + NL + "  verifyTagList_";
  protected final String TEXT_67 = ".add(\"Building\");     " + NL + "  verifyTagList_";
  protected final String TEXT_68 = ".add(\"Premise\");     " + NL + "  verifyTagList_";
  protected final String TEXT_69 = ".add(\"SubBuilding\");     " + NL + "  verifyTagList_";
  protected final String TEXT_70 = ".add(\"PostalCode\");     " + NL + "  verifyTagList_";
  protected final String TEXT_71 = ".add(\"PostalCodePrimary\");     " + NL + "  verifyTagList_";
  protected final String TEXT_72 = ".add(\"PostalCodeSecondary\");     " + NL + "  verifyTagList_";
  protected final String TEXT_73 = ".add(\"Organization\");     " + NL + "  verifyTagList_";
  protected final String TEXT_74 = ".add(\"PostBox\");     " + NL + "  verifyTagList_";
  protected final String TEXT_75 = ".add(\"Unmatched\");" + NL + "  " + NL + "  boolean notAddGeocode_";
  protected final String TEXT_76 = " = true;" + NL + "  boolean notAddVerify_";
  protected final String TEXT_77 = " = true;" + NL + "  ";
  protected final String TEXT_78 = NL + "      if (notAddGeocode_";
  protected final String TEXT_79 = " && geocodeTagList_";
  protected final String TEXT_80 = ".contains(\"";
  protected final String TEXT_81 = "\")) {" + NL + "          notAddGeocode_";
  protected final String TEXT_82 = " = false;" + NL + "          lqtProcessList_";
  protected final String TEXT_83 = ".add(\"Geocode\", lqtProcessOptions_";
  protected final String TEXT_84 = ");  " + NL + "      }                         " + NL + "      if (notAddVerify_";
  protected final String TEXT_85 = " && verifyTagList_";
  protected final String TEXT_86 = ".contains(\"";
  protected final String TEXT_87 = "\")) {" + NL + "          notAddVerify_";
  protected final String TEXT_88 = " = false;" + NL + "          lqtProcessList_";
  protected final String TEXT_89 = ".add(\"Verify\", lqtProcessOptions_";
  protected final String TEXT_90 = ");  " + NL + "      }";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String dataPath = ElementParameterParser.getValue(node, "__DATA_PATH__");
	
	String address_line_separator = ElementParameterParser.getValue(node,"__ADDRESS_LINE_SEPARATOR__");
	String default_country = ElementParameterParser.getValue(node, "__DEFAULT_COUNTRY__"); 
	String forced_country = ElementParameterParser.getValue(node, "__FORCED_COUNTRY__"); 
	String output_script = ElementParameterParser.getValue(node, "__OUTPUT_SCRIPT__"); 
	String minimum_match_score = ElementParameterParser.getValue(node, "__MINIMUM_MATCH_SCORE__"); 
	List<Map<String, String>> output_address = (List<Map<String, String>>)ElementParameterParser.getObjectValue(node, "__OUTPUT_ADDRESS__");

    stringBuffer.append(TEXT_1);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_5);
    stringBuffer.append( dataPath );
    stringBuffer.append(TEXT_6);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_7);
    stringBuffer.append( address_line_separator );
    stringBuffer.append(TEXT_8);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_9);
    stringBuffer.append( output_script );
    stringBuffer.append(TEXT_10);
    stringBuffer.append( default_country );
    stringBuffer.append(TEXT_11);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_12);
    stringBuffer.append( default_country );
    stringBuffer.append(TEXT_13);
    stringBuffer.append( forced_country );
    stringBuffer.append(TEXT_14);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_15);
    stringBuffer.append( forced_country );
    stringBuffer.append(TEXT_16);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_17);
    stringBuffer.append( minimum_match_score );
    stringBuffer.append(TEXT_18);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_19);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_20);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_21);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_22);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_23);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_24);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_26);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_27);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_28);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_29);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_31);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_32);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_33);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_34);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_35);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_36);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_37);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_38);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_39);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_40);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_41);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_42);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_43);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_44);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_45);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_46);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_47);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_48);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_49);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_50);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_51);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_52);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_53);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_54);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_55);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_56);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_57);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_58);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_59);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_60);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_61);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_62);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_63);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_64);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_65);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_66);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_67);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_68);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_69);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_70);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_71);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_72);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_73);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_74);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_75);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_76);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_77);
    
  for (Map<String, String> output : output_address) {
      String output_address_field = output.get("ADDRESS_FIELD");

    stringBuffer.append(TEXT_78);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_79);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_80);
    stringBuffer.append(output_address_field);
    stringBuffer.append(TEXT_81);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_82);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_83);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_84);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_85);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_86);
    stringBuffer.append(output_address_field);
    stringBuffer.append(TEXT_87);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_88);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_89);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_90);
    
  }

    return stringBuffer.toString();
  }
}
