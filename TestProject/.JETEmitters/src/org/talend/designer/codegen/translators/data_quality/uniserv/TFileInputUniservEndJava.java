package org.talend.designer.codegen.translators.data_quality.uniserv;

import org.talend.core.model.process.INode;
import org.talend.core.model.process.ElementParameterParser;
import org.talend.core.model.metadata.IMetadataTable;
import org.talend.core.model.metadata.IMetadataColumn;
import org.talend.core.model.process.IConnection;
import org.talend.core.model.process.IConnectionCategory;
import org.talend.designer.codegen.config.CodeGeneratorArgument;
import org.talend.core.model.metadata.types.JavaTypesManager;
import org.talend.core.model.metadata.types.JavaType;
import org.talend.core.model.process.EConnectionType;
import java.util.List;
import java.util.Map;

public class TFileInputUniservEndJava
{
  protected static String nl;
  public static synchronized TFileInputUniservEndJava create(String lineSeparator)
  {
    nl = lineSeparator;
    TFileInputUniservEndJava result = new TFileInputUniservEndJava();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "    writer_";
  protected final String TEXT_2 = ".close();" + NL + "" + NL + "    String hostname_";
  protected final String TEXT_3 = " = ";
  protected final String TEXT_4 = ";" + NL + "    int port_";
  protected final String TEXT_5 = " = Integer.parseInt(";
  protected final String TEXT_6 = ");" + NL + "" + NL + "    org.talend.uniserv.AutoApi automation_";
  protected final String TEXT_7 = " = new org.talend.uniserv.AutoApi();" + NL + "    automation_";
  protected final String TEXT_8 = ".setLanguage(\"E\");" + NL + "    automation_";
  protected final String TEXT_9 = ".enableJobStateLogging(true);" + NL + "    boolean isConnectionOpen_";
  protected final String TEXT_10 = " = false;" + NL + "    boolean isJobLocked_";
  protected final String TEXT_11 = " = false;" + NL + "    try {";
  protected final String TEXT_12 = NL + "        ";
  protected final String TEXT_13 = " " + NL + "\tfinal String decryptedPassword_";
  protected final String TEXT_14 = " = routines.system.PasswordEncryptUtil.decryptPassword(";
  protected final String TEXT_15 = ");";
  protected final String TEXT_16 = NL + "\tfinal String decryptedPassword_";
  protected final String TEXT_17 = " = ";
  protected final String TEXT_18 = "; ";
  protected final String TEXT_19 = NL + "    " + NL + "    " + NL + "        automation_";
  protected final String TEXT_20 = ".openConnection(hostname_";
  protected final String TEXT_21 = ", port_";
  protected final String TEXT_22 = ", ";
  protected final String TEXT_23 = ", ";
  protected final String TEXT_24 = ", decryptedPassword_";
  protected final String TEXT_25 = ");" + NL + "        isConnectionOpen_";
  protected final String TEXT_26 = " = true;" + NL + "" + NL + "        try {" + NL + "            automation_";
  protected final String TEXT_27 = ".enableSessionTimeout(true);" + NL + "        } catch (Exception ex) {" + NL + "        }" + NL + "" + NL + "        int jobState_";
  protected final String TEXT_28 = " = automation_";
  protected final String TEXT_29 = ".getJobState(";
  protected final String TEXT_30 = ", ";
  protected final String TEXT_31 = ");" + NL + "        if (jobState_";
  protected final String TEXT_32 = " == org.talend.uniserv.AutoApi.JOB_STATE_RUNNING) {" + NL + "            throw new org.talend.uniserv.DQBTException(\"DQ Batch Suite Job '\" + jobName + \"' is already running.\"); " + NL + "        } else {" + NL + "            automation_";
  protected final String TEXT_33 = ".lockJob(";
  protected final String TEXT_34 = ", ";
  protected final String TEXT_35 = ");" + NL + "            isJobLocked_";
  protected final String TEXT_36 = " = true;" + NL + "" + NL + "            if (jobState_";
  protected final String TEXT_37 = " == org.talend.uniserv.AutoApi.JOB_STATE_PARTLY_FINISHED || " + NL + "                jobState_";
  protected final String TEXT_38 = " == org.talend.uniserv.AutoApi.JOB_STATE_COMPLETED || " + NL + "                jobState_";
  protected final String TEXT_39 = " == org.talend.uniserv.AutoApi.JOB_STATE_ABORTED) {" + NL + "                automation_";
  protected final String TEXT_40 = ".resetJob(";
  protected final String TEXT_41 = ", ";
  protected final String TEXT_42 = ", null, null, null);" + NL + "                jobState_";
  protected final String TEXT_43 = " = automation_";
  protected final String TEXT_44 = ".waitForJobCompletionState(";
  protected final String TEXT_45 = ", ";
  protected final String TEXT_46 = ");" + NL + "            } else if (jobState_";
  protected final String TEXT_47 = " == org.talend.uniserv.AutoApi.JOB_STATE_BEING_RESET) {" + NL + "                jobState_";
  protected final String TEXT_48 = " = automation_";
  protected final String TEXT_49 = ".waitForJobCompletionState(";
  protected final String TEXT_50 = ", ";
  protected final String TEXT_51 = ");" + NL + "            }" + NL + "" + NL + "            if (jobState_";
  protected final String TEXT_52 = " != org.talend.uniserv.AutoApi.JOB_STATE_READY) {" + NL + "                throw new org.talend.uniserv.DQBTException(\"DQ Batch Suite Job '\" + ";
  protected final String TEXT_53 = " + \"' cannot be reset.\");" + NL + "            }" + NL + "" + NL + "            System.out.println(\"The input file is being uploaded to the DQ Batch Suite Server.\");";
  protected final String TEXT_54 = NL + "                automation_";
  protected final String TEXT_55 = ".putFileToPool(";
  protected final String TEXT_56 = "+\"/\"+";
  protected final String TEXT_57 = ", ";
  protected final String TEXT_58 = "+\"/tempInputUniserv";
  protected final String TEXT_59 = "_";
  protected final String TEXT_60 = "_";
  protected final String TEXT_61 = "_";
  protected final String TEXT_62 = "\");";
  protected final String TEXT_63 = NL + "                automation_";
  protected final String TEXT_64 = ".putFileToTrans(";
  protected final String TEXT_65 = ", ";
  protected final String TEXT_66 = ", ";
  protected final String TEXT_67 = " + \"/\" + ";
  protected final String TEXT_68 = ", ";
  protected final String TEXT_69 = "+\"/tempInputUniserv";
  protected final String TEXT_70 = "_";
  protected final String TEXT_71 = "_";
  protected final String TEXT_72 = "_";
  protected final String TEXT_73 = "\");";
  protected final String TEXT_74 = NL + NL + "            automation_";
  protected final String TEXT_75 = ".startJob(";
  protected final String TEXT_76 = ", ";
  protected final String TEXT_77 = ", null, null, null, \"\");" + NL + "            jobState_";
  protected final String TEXT_78 = " = automation_";
  protected final String TEXT_79 = ".waitForJobCompletionState(";
  protected final String TEXT_80 = ", ";
  protected final String TEXT_81 = ");" + NL + "            if (jobState_";
  protected final String TEXT_82 = " == org.talend.uniserv.AutoApi.JOB_STATE_COMPLETED) {" + NL + "                System.out.println(\"The output file is being downloaded from the DQ Batch Suite Server.\");";
  protected final String TEXT_83 = NL + "                    automation_";
  protected final String TEXT_84 = ".getFileFromPool(";
  protected final String TEXT_85 = "+\"/\"+";
  protected final String TEXT_86 = ", ";
  protected final String TEXT_87 = "+\"/tempOutputUniserv";
  protected final String TEXT_88 = "_";
  protected final String TEXT_89 = "_";
  protected final String TEXT_90 = "_";
  protected final String TEXT_91 = "\");";
  protected final String TEXT_92 = "\t" + NL + "                    automation_";
  protected final String TEXT_93 = ".getFileFromTrans(";
  protected final String TEXT_94 = ", ";
  protected final String TEXT_95 = ", ";
  protected final String TEXT_96 = " + \"/\" + ";
  protected final String TEXT_97 = ", ";
  protected final String TEXT_98 = "+\"/tempOutputUniserv";
  protected final String TEXT_99 = "_";
  protected final String TEXT_100 = "_";
  protected final String TEXT_101 = "_";
  protected final String TEXT_102 = "\");";
  protected final String TEXT_103 = NL + "                new java.io.File(";
  protected final String TEXT_104 = "+\"/tempOutputUniserv";
  protected final String TEXT_105 = "_";
  protected final String TEXT_106 = "_";
  protected final String TEXT_107 = "_";
  protected final String TEXT_108 = "\").deleteOnExit();" + NL + "" + NL + "              " + NL + "            } else if (jobState_";
  protected final String TEXT_109 = " == org.talend.uniserv.AutoApi.JOB_STATE_ABORTED) {" + NL + "                throw new org.talend.uniserv.DQBTException(\"DQ Batch Suite Job '\" + ";
  protected final String TEXT_110 = " + \"' was aborted.\");" + NL + "" + NL + "            } else {" + NL + "                throw new org.talend.uniserv.DQBTException(\"DQ Batch Suite Job '\" + ";
  protected final String TEXT_111 = " + \"' was not successfully completed.\");" + NL + "            }" + NL + "        }" + NL + "" + NL + "    } catch (Exception e) {" + NL + "        throw(e);" + NL + "" + NL + "    } finally {" + NL + "        if (isConnectionOpen_";
  protected final String TEXT_112 = ") {" + NL + "            if (isJobLocked_";
  protected final String TEXT_113 = ") {" + NL + "                try {" + NL + "                    automation_";
  protected final String TEXT_114 = ".unlockJob(";
  protected final String TEXT_115 = ", ";
  protected final String TEXT_116 = ");" + NL + "                } catch (Exception ex) {" + NL + "                }" + NL + "            }" + NL + "" + NL + "            try {" + NL + "                automation_";
  protected final String TEXT_117 = ".enableSessionTimeout(false);" + NL + "            } catch (Exception ex) {" + NL + "            }" + NL + "" + NL + "            try {" + NL + "                automation_";
  protected final String TEXT_118 = ".closeConnection();" + NL + "            } catch (Exception e) {" + NL + "            }" + NL + "        }" + NL + "    }";
  protected final String TEXT_119 = NL + "    String jobInputFilePath_";
  protected final String TEXT_120 = " = (String) globalMap.get(\"";
  protected final String TEXT_121 = "_EXPLORER_EXPORT_FILENAME\");" + NL + "    String jobDir_";
  protected final String TEXT_122 = " = (String) globalMap.get(\"";
  protected final String TEXT_123 = "_METRIC_SNAPSHOT_TABLE_NAME\") + \"_\" +" + NL + "                             (String) globalMap.get(\"";
  protected final String TEXT_124 = "_METRIC_NAME\");" + NL + "    String jobName_";
  protected final String TEXT_125 = " = jobDir_";
  protected final String TEXT_126 = ";" + NL + "" + NL + "    if (jobInputFilePath_";
  protected final String TEXT_127 = " == null || \"\".equals(jobInputFilePath_";
  protected final String TEXT_128 = ")) {" + NL + "    \tglobalMap.put(\"";
  protected final String TEXT_129 = "_EXPLORER_STATUS_CODE\", new Integer(-";
  protected final String TEXT_130 = "));" + NL + "    \tglobalMap.put(\"";
  protected final String TEXT_131 = "_EXPLORER_STATUS_MSG\", \"";
  protected final String TEXT_132 = ": ";
  protected final String TEXT_133 = "_EXPLORER_EXPORT_FILENAME is null or empty.\");" + NL + "    } else {" + NL + "        org.talend.uniserv.AutoApi automation_";
  protected final String TEXT_134 = " = new org.talend.uniserv.AutoApi();" + NL + "        automation_";
  protected final String TEXT_135 = ".setLanguage(\"E\");" + NL + "        automation_";
  protected final String TEXT_136 = ".enableLogging();" + NL + "        boolean isConnectionOpen_";
  protected final String TEXT_137 = " = false;" + NL + "        boolean isJobLocked_";
  protected final String TEXT_138 = " = false;" + NL + "        try {" + NL + "            int port_";
  protected final String TEXT_139 = " = Integer.parseInt(";
  protected final String TEXT_140 = ");" + NL;
  protected final String TEXT_141 = NL + "            ";
  protected final String TEXT_142 = " " + NL + "\tfinal String decryptedPassword_";
  protected final String TEXT_143 = " = routines.system.PasswordEncryptUtil.decryptPassword(";
  protected final String TEXT_144 = ");";
  protected final String TEXT_145 = NL + "\tfinal String decryptedPassword_";
  protected final String TEXT_146 = " = ";
  protected final String TEXT_147 = "; ";
  protected final String TEXT_148 = NL + "   " + NL + "            " + NL + "            automation_";
  protected final String TEXT_149 = ".openConnection(";
  protected final String TEXT_150 = ", port_";
  protected final String TEXT_151 = ", ";
  protected final String TEXT_152 = ", ";
  protected final String TEXT_153 = ", decryptedPassword_";
  protected final String TEXT_154 = ");" + NL + "            isConnectionOpen_";
  protected final String TEXT_155 = " = true;" + NL + "" + NL + "            try {" + NL + "                automation_";
  protected final String TEXT_156 = ".enableSessionTimeout(true);" + NL + "            } catch (Exception ex) {" + NL + "            }" + NL + "" + NL + "            automation_";
  protected final String TEXT_157 = ".createJobDirectory(\"\", jobDir_";
  protected final String TEXT_158 = ");" + NL + "" + NL + "            automation_";
  protected final String TEXT_159 = ".createEmptyJob(jobDir_";
  protected final String TEXT_160 = ", jobName_";
  protected final String TEXT_161 = ");" + NL + "            automation_";
  protected final String TEXT_162 = ".lockJob(jobDir_";
  protected final String TEXT_163 = ", jobName_";
  protected final String TEXT_164 = ");" + NL + "            isJobLocked_";
  protected final String TEXT_165 = " = true;" + NL + "" + NL + "            automation_";
  protected final String TEXT_166 = ".putJobDefinitionFile(jobDir_";
  protected final String TEXT_167 = ", jobName_";
  protected final String TEXT_168 = ", ";
  protected final String TEXT_169 = ");" + NL + "            automation_";
  protected final String TEXT_170 = ".putFileToTrans(jobDir_";
  protected final String TEXT_171 = ", jobName_";
  protected final String TEXT_172 = ", \"input/input.csv\", jobInputFilePath_";
  protected final String TEXT_173 = ");" + NL + "" + NL + "            automation_";
  protected final String TEXT_174 = ".startJob(jobDir_";
  protected final String TEXT_175 = ", jobName_";
  protected final String TEXT_176 = ", \"\", \"\", \"\", ";
  protected final String TEXT_177 = ");\t\t" + NL + "            int jobState_";
  protected final String TEXT_178 = " = automation_";
  protected final String TEXT_179 = ".waitForJobCompletionState(jobDir_";
  protected final String TEXT_180 = ", jobName_";
  protected final String TEXT_181 = ");" + NL + "" + NL + "            if (jobState_";
  protected final String TEXT_182 = " == org.talend.uniserv.AutoApi.JOB_STATE_COMPLETED) {" + NL + "                String jobOutputFilePath_";
  protected final String TEXT_183 = " = jobInputFilePath_";
  protected final String TEXT_184 = ".replace(\"_exported\", \"_metric_result\");" + NL + "                automation_";
  protected final String TEXT_185 = ".getFileFromTrans(jobDir_";
  protected final String TEXT_186 = ", jobName_";
  protected final String TEXT_187 = ", \"output/output.csv\", jobOutputFilePath_";
  protected final String TEXT_188 = ");" + NL + "" + NL + "                globalMap.put(\"";
  protected final String TEXT_189 = "_METRIC_RESULT_FILENAME\", jobOutputFilePath_";
  protected final String TEXT_190 = ");" + NL + "                globalMap.put(\"";
  protected final String TEXT_191 = "_EXPLORER_STATUS_CODE\", new Integer(";
  protected final String TEXT_192 = "));" + NL + "                globalMap.put(\"";
  protected final String TEXT_193 = "_EXPLORER_STATUS_MSG\", \"Component ";
  protected final String TEXT_194 = ": DQ Batch Suite Job \" + jobName_";
  protected final String TEXT_195 = " + \" was successfully completed.\");" + NL + "" + NL + "            } else if (jobState_";
  protected final String TEXT_196 = " == org.talend.uniserv.AutoApi.JOB_STATE_ABORTED) {" + NL + "                globalMap.put(\"";
  protected final String TEXT_197 = "_EXPLORER_STATUS_CODE\", new Integer(-";
  protected final String TEXT_198 = "));" + NL + "                globalMap.put(\"";
  protected final String TEXT_199 = "_EXPLORER_STATUS_MSG\", \"Component ";
  protected final String TEXT_200 = ": DQ Batch Suite Job \" + jobName_";
  protected final String TEXT_201 = " + \" was aborted.\");" + NL + "" + NL + "            } else {" + NL + "                globalMap.put(\"";
  protected final String TEXT_202 = "_EXPLORER_STATUS_CODE\", new Integer(-";
  protected final String TEXT_203 = "));" + NL + "                globalMap.put(\"";
  protected final String TEXT_204 = "_EXPLORER_STATUS_MSG\", \"Component ";
  protected final String TEXT_205 = ": DQ Batch Suite Job \" + jobName_";
  protected final String TEXT_206 = " + \" was not successfully completed.\");" + NL + "            }" + NL + "" + NL + "        } catch (org.talend.uniserv.DQBTException dqbtEx) {" + NL + "            globalMap.put(\"";
  protected final String TEXT_207 = "_EXPLORER_STATUS_CODE\", new Integer(-";
  protected final String TEXT_208 = "));" + NL + "            StringBuffer errMsg = new StringBuffer(\"Component ";
  protected final String TEXT_209 = ": DQ Batch Suite Error \");" + NL + "            errMsg.append(dqbtEx.getDQBTModuleCode());" + NL + "            errMsg.append(' ');" + NL + "            errMsg.append(dqbtEx.getDQBTErrorNumber());" + NL + "            errMsg.append(\" occurred: \");" + NL + "            errMsg.append(dqbtEx.getDQBTErrorMessage());" + NL + "            if (dqbtEx.getOSErrorMessage() != null) {" + NL + "                errMsg.append(\" (\");" + NL + "                errMsg.append(dqbtEx.getOSErrorMessage());" + NL + "                errMsg.append(\")\");" + NL + "            }" + NL + "            globalMap.put(\"";
  protected final String TEXT_210 = "_EXPLORER_STATUS_MSG\", errMsg.toString());" + NL + "" + NL + "        } catch (Exception ex) {" + NL + "            globalMap.put(\"";
  protected final String TEXT_211 = "_EXPLORER_STATUS_CODE\", new Integer(-";
  protected final String TEXT_212 = "));" + NL + "            globalMap.put(\"";
  protected final String TEXT_213 = "_EXPLORER_STATUS_MSG\", \"Component ";
  protected final String TEXT_214 = ": \" + ex.toString());" + NL + "" + NL + "        } finally {" + NL + "            if (isConnectionOpen_";
  protected final String TEXT_215 = ") {" + NL + "                if (isJobLocked_";
  protected final String TEXT_216 = ") {" + NL + "                    try {" + NL + "                        automation_";
  protected final String TEXT_217 = ".unlockJob(jobDir_";
  protected final String TEXT_218 = ", jobName_";
  protected final String TEXT_219 = ");" + NL + "                    } catch (Exception ex) {" + NL + "                    }" + NL + "                }" + NL + "" + NL + "                try {" + NL + "                    automation_";
  protected final String TEXT_220 = ".deleteJobDirectory(\"\", jobDir_";
  protected final String TEXT_221 = ");" + NL + "                } catch (Exception ex) {" + NL + "                }" + NL + "" + NL + "                try {" + NL + "                    automation_";
  protected final String TEXT_222 = ".enableSessionTimeout(false);" + NL + "                } catch (Exception ex) {" + NL + "                }" + NL + "" + NL + "                try {" + NL + "                    automation_";
  protected final String TEXT_223 = ".closeConnection();" + NL + "                } catch (Exception ex) {" + NL + "                }" + NL + "            }" + NL + "" + NL + "            try {" + NL + "                java.io.File inputFileToDelete = new java.io.File(jobInputFilePath_";
  protected final String TEXT_224 = ");" + NL + "                inputFileToDelete.delete();" + NL + "            } catch (Exception ex) {" + NL + "            }" + NL + "        }" + NL + "    }";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
     
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String projectName = codeGenArgument.getCurrentProjectName();
String jobNameArg = codeGenArgument.getJobName();
String jobVersion = codeGenArgument.getJobVersion();
String subJobId = node.getDesignSubjobStartNode().getUniqueName();

String vcid = "";

String destination = ElementParameterParser.getValue(node, "__DESTINATION__");
if(destination!=null && !"".equals(destination)){
	vcid = destination;
}    

String jobDirectory = ElementParameterParser.getValue(node, "__JOB_DIR__");
String jobName = ElementParameterParser.getValue(node, "__JOB_NAME__");
String hostname = ElementParameterParser.getValue(node, "__HOSTNAME__");
String port = ElementParameterParser.getValue(node, "__PORT__");
String mandant = ElementParameterParser.getValue(node, "__MANDANT__");
String username = ElementParameterParser.getValue(node, "__USERNAME__");

String in_directory = ElementParameterParser.getValue(node, "__OUT_DIR__");
String in_filename = ElementParameterParser.getValue(node, "__OUT_FILENAME__");
String in_mode = ElementParameterParser.getValue(node, "__OUT_MODE__");

String out_directory = ElementParameterParser.getValue(node, "__IN_DIR__");
String out_filename = ElementParameterParser.getValue(node, "__IN_FILENAME__");
String out_mode = ElementParameterParser.getValue(node, "__IN_MODE__");
String tempDir = ElementParameterParser.getValue(node, "__TEMP_DIR__");

boolean metricJob = ("true").equals(ElementParameterParser.getValue(node,"__METRIC_JOB__"));
String jobDefinitionFilePath = ElementParameterParser.getValue(node, "__CLIENT_JOB_DEFINITION_FILE__");
String jobVariable = ElementParameterParser.getValue(node, "__JOB_VARIABLE__");
String statusCode = "4";

if (!metricJob) {

    stringBuffer.append(TEXT_1);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(hostname);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_5);
    stringBuffer.append(port);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_7);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_9);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_10);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_11);
    
        String passwordFieldName = "__PASSWORD__";
        
    stringBuffer.append(TEXT_12);
    if (ElementParameterParser.canEncrypt(node, passwordFieldName)) {
    stringBuffer.append(TEXT_13);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(ElementParameterParser.getEncryptedValue(node, passwordFieldName));
    stringBuffer.append(TEXT_15);
    } else {
    stringBuffer.append(TEXT_16);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_17);
    stringBuffer.append( ElementParameterParser.getValue(node, passwordFieldName));
    stringBuffer.append(TEXT_18);
    }
    stringBuffer.append(TEXT_19);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_20);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_21);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_22);
    stringBuffer.append(mandant);
    stringBuffer.append(TEXT_23);
    stringBuffer.append(username);
    stringBuffer.append(TEXT_24);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_26);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_27);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_28);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_29);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_31);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_32);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_33);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_34);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_35);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_36);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_37);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_38);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_39);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_40);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_41);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_42);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_43);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_44);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_45);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_46);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_47);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_48);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_49);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_50);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_51);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_52);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_53);
    
            if ("Pool".equals(in_mode)) {

    stringBuffer.append(TEXT_54);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_55);
    stringBuffer.append(in_directory);
    stringBuffer.append(TEXT_56);
    stringBuffer.append(in_filename);
    stringBuffer.append(TEXT_57);
    stringBuffer.append(tempDir);
    stringBuffer.append(TEXT_58);
    stringBuffer.append(vcid);
    stringBuffer.append(TEXT_59);
    stringBuffer.append(projectName);
    stringBuffer.append(TEXT_60);
    stringBuffer.append(jobNameArg);
    stringBuffer.append(TEXT_61);
    stringBuffer.append(jobVersion);
    stringBuffer.append(TEXT_62);
    
            } else if ("Job".equals(in_mode)) {

    stringBuffer.append(TEXT_63);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_64);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_65);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_66);
    stringBuffer.append(in_directory);
    stringBuffer.append(TEXT_67);
    stringBuffer.append(in_filename);
    stringBuffer.append(TEXT_68);
    stringBuffer.append(tempDir);
    stringBuffer.append(TEXT_69);
    stringBuffer.append(vcid);
    stringBuffer.append(TEXT_70);
    stringBuffer.append(projectName);
    stringBuffer.append(TEXT_71);
    stringBuffer.append(jobNameArg);
    stringBuffer.append(TEXT_72);
    stringBuffer.append(jobVersion);
    stringBuffer.append(TEXT_73);
    
            }

    stringBuffer.append(TEXT_74);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_75);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_76);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_77);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_78);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_79);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_80);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_81);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_82);
    
                if ("Pool".equals(out_mode)) {

    stringBuffer.append(TEXT_83);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_84);
    stringBuffer.append(out_directory);
    stringBuffer.append(TEXT_85);
    stringBuffer.append(out_filename);
    stringBuffer.append(TEXT_86);
    stringBuffer.append(tempDir);
    stringBuffer.append(TEXT_87);
    stringBuffer.append(vcid);
    stringBuffer.append(TEXT_88);
    stringBuffer.append(projectName);
    stringBuffer.append(TEXT_89);
    stringBuffer.append(jobNameArg);
    stringBuffer.append(TEXT_90);
    stringBuffer.append(jobVersion);
    stringBuffer.append(TEXT_91);
    
                } else if ("Job".equals(out_mode)) {

    stringBuffer.append(TEXT_92);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_93);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_94);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_95);
    stringBuffer.append(out_directory);
    stringBuffer.append(TEXT_96);
    stringBuffer.append(out_filename);
    stringBuffer.append(TEXT_97);
    stringBuffer.append(tempDir);
    stringBuffer.append(TEXT_98);
    stringBuffer.append(vcid);
    stringBuffer.append(TEXT_99);
    stringBuffer.append(projectName);
    stringBuffer.append(TEXT_100);
    stringBuffer.append(jobNameArg);
    stringBuffer.append(TEXT_101);
    stringBuffer.append(jobVersion);
    stringBuffer.append(TEXT_102);
    
                }

    stringBuffer.append(TEXT_103);
    stringBuffer.append(tempDir);
    stringBuffer.append(TEXT_104);
    stringBuffer.append(vcid);
    stringBuffer.append(TEXT_105);
    stringBuffer.append(projectName);
    stringBuffer.append(TEXT_106);
    stringBuffer.append(jobNameArg);
    stringBuffer.append(TEXT_107);
    stringBuffer.append(jobVersion);
    stringBuffer.append(TEXT_108);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_109);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_110);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_111);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_112);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_113);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_114);
    stringBuffer.append(jobDirectory);
    stringBuffer.append(TEXT_115);
    stringBuffer.append(jobName);
    stringBuffer.append(TEXT_116);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_117);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_118);
    
} else {

    stringBuffer.append(TEXT_119);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_120);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_121);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_122);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_123);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_124);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_125);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_126);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_127);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_128);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_129);
    stringBuffer.append(statusCode);
    stringBuffer.append(TEXT_130);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_131);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_132);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_133);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_134);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_135);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_136);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_137);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_138);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_139);
    stringBuffer.append(port);
    stringBuffer.append(TEXT_140);
    
            String passwordFieldName = "__PASSWORD__";
            
    stringBuffer.append(TEXT_141);
    if (ElementParameterParser.canEncrypt(node, passwordFieldName)) {
    stringBuffer.append(TEXT_142);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_143);
    stringBuffer.append(ElementParameterParser.getEncryptedValue(node, passwordFieldName));
    stringBuffer.append(TEXT_144);
    } else {
    stringBuffer.append(TEXT_145);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_146);
    stringBuffer.append( ElementParameterParser.getValue(node, passwordFieldName));
    stringBuffer.append(TEXT_147);
    }
    stringBuffer.append(TEXT_148);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_149);
    stringBuffer.append(hostname);
    stringBuffer.append(TEXT_150);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_151);
    stringBuffer.append(mandant);
    stringBuffer.append(TEXT_152);
    stringBuffer.append(username);
    stringBuffer.append(TEXT_153);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_154);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_155);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_156);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_157);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_158);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_159);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_160);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_161);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_162);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_163);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_164);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_165);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_166);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_167);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_168);
    stringBuffer.append(jobDefinitionFilePath);
    stringBuffer.append(TEXT_169);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_170);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_171);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_172);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_173);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_174);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_175);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_176);
    stringBuffer.append(jobVariable);
    stringBuffer.append(TEXT_177);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_178);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_179);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_180);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_181);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_182);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_183);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_184);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_185);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_186);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_187);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_188);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_189);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_190);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_191);
    stringBuffer.append(statusCode);
    stringBuffer.append(TEXT_192);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_193);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_194);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_195);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_196);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_197);
    stringBuffer.append(statusCode);
    stringBuffer.append(TEXT_198);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_199);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_200);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_201);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_202);
    stringBuffer.append(statusCode);
    stringBuffer.append(TEXT_203);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_204);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_205);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_206);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_207);
    stringBuffer.append(statusCode);
    stringBuffer.append(TEXT_208);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_209);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_210);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_211);
    stringBuffer.append(statusCode);
    stringBuffer.append(TEXT_212);
    stringBuffer.append(subJobId);
    stringBuffer.append(TEXT_213);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_214);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_215);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_216);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_217);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_218);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_219);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_220);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_221);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_222);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_223);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_224);
    
} 

    return stringBuffer.toString();
  }
}
