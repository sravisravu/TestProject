package org.talend.designer.codegen.translators.data_quality.address;

import org.talend.core.model.process.INode;
import org.talend.core.model.metadata.IMetadataTable;
import org.talend.core.model.metadata.IMetadataColumn;
import org.talend.core.model.process.ElementParameterParser;
import org.talend.core.model.process.IConnection;
import org.talend.designer.codegen.config.CodeGeneratorArgument;
import org.talend.core.model.process.IConnectionCategory;
import java.util.List;
import java.util.Map;
import java.io.IOException;
import java.net.URL;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.TimeZone;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;

public class TGoogleMapLookupMainJava
{
  protected static String nl;
  public static synchronized TGoogleMapLookupMainJava create(String lineSeparator)
  {
    nl = lineSeparator;
    TGoogleMapLookupMainJava result = new TGoogleMapLookupMainJava();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "if(";
  protected final String TEXT_3 = " == null || \"\".equals(";
  protected final String TEXT_4 = ".trim())) {" + NL + "    System.err.println(\"[ERROR]: Please make sure all the tGoogleMapLookup components have input the API key.\");" + NL + "    return;" + NL + "}";
  protected final String TEXT_5 = NL + "        String latParameter = String.valueOf(";
  protected final String TEXT_6 = ".";
  protected final String TEXT_7 = ");" + NL + "        String lngParameter = String.valueOf(";
  protected final String TEXT_8 = ".";
  protected final String TEXT_9 = ");" + NL + "        String url =\"https://maps.googleapis.com/maps/api/place/nearbysearch/xml?location=\" + java.net.URLEncoder.encode(latParameter, \"UTF8\") + \",\" + java.net.URLEncoder.encode(lngParameter, \"UTF8\") + \"&radius=20&key=\"+ ";
  protected final String TEXT_10 = ".trim();" + NL + "" + NL + "        // Send GET request" + NL + "        URL client = new URL(url);" + NL + "        URLConnection conn = client.openConnection();" + NL + "        Thread.sleep((";
  protected final String TEXT_11 = ")*100);" + NL + "        InputStream responseBody = conn.getInputStream();" + NL + "        " + NL + "        // XML Bufferization" + NL + "        Document response = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(responseBody);" + NL + "        responseBody.close();" + NL + "        " + NL + "        // Xpath expressions" + NL + "        XPath xPath = XPathFactory.newInstance().newXPath();" + NL + "        " + NL + "        String status=xPath.evaluate(\"/PlaceSearchResponse/status\", response);" + NL + "        " + NL + "        if(status.equals(\"OK\")) {" + NL + "             String placeid=xPath.evaluate(\"/PlaceSearchResponse/result[1]/place_id\", response);" + NL + "             String url2 =\"https://maps.googleapis.com/maps/api/place/details/xml?placeid=\" + placeid + \"&key=\"+ ";
  protected final String TEXT_12 = ".trim();" + NL + "             // Send GET request" + NL + "             URL client2 = new URL(url2);" + NL + "             URLConnection conn2 = client2.openConnection();" + NL + "             Thread.sleep((";
  protected final String TEXT_13 = ")*100);" + NL + "             InputStream responseBody2 = conn2.getInputStream();" + NL + "        " + NL + "             // XML Bufferization" + NL + "             Document response2 = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(responseBody2);" + NL + "             responseBody2.close();" + NL + "" + NL + "             // Xpath expressions" + NL + "             XPath xPath2_";
  protected final String TEXT_14 = " = XPathFactory.newInstance().newXPath();" + NL + "             " + NL + "             String status2_";
  protected final String TEXT_15 = "=xPath2_";
  protected final String TEXT_16 = ".evaluate(\"/PlaceDetailsResponse/status\", response2);" + NL + "             " + NL + "             if(\"OK\".equals(status2_";
  protected final String TEXT_17 = ")) {";
  protected final String TEXT_18 = NL + "                 ";
  protected final String TEXT_19 = ".street_number_long = xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='street_number']/long_name\", response2);";
  protected final String TEXT_20 = NL + "                 ";
  protected final String TEXT_21 = ".street_number_short = xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='street_number']/short_name\", response2);" + NL + "                 ";
  protected final String TEXT_22 = NL + "                 ";
  protected final String TEXT_23 = ".route_short =xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='route']/short_name\", response2);";
  protected final String TEXT_24 = NL + "                 ";
  protected final String TEXT_25 = ".route_long =xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='route']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_26 = NL + "                 ";
  protected final String TEXT_27 = ".locality_short=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='locality']/short_name\", response2);";
  protected final String TEXT_28 = NL + "                 ";
  protected final String TEXT_29 = ".locality_long=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='locality']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_30 = NL + "                 ";
  protected final String TEXT_31 = ".sublocality_short=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='sublocality']/short_name\", response2);";
  protected final String TEXT_32 = NL + "                 ";
  protected final String TEXT_33 = ".sublocality_long=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='sublocality']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_34 = NL + "                 ";
  protected final String TEXT_35 = ".adm_area1_short=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='administrative_area_level_1']/short_name\", response2);";
  protected final String TEXT_36 = NL + "                 ";
  protected final String TEXT_37 = ".adm_area1_long=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='administrative_area_level_1']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_38 = NL + "                 ";
  protected final String TEXT_39 = ".adm_area2_short=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='administrative_area_level_2']/short_name\", response2);";
  protected final String TEXT_40 = NL + "                 ";
  protected final String TEXT_41 = ".adm_area2_long=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='administrative_area_level_2']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_42 = NL + "                 ";
  protected final String TEXT_43 = ".adm_area3_short=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='administrative_area_level_3']/short_name\", response2);";
  protected final String TEXT_44 = NL + "                 ";
  protected final String TEXT_45 = ".adm_area3_long=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='administrative_area_level_3']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_46 = NL + "                 ";
  protected final String TEXT_47 = ".country_short=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='country']/short_name\", response2);";
  protected final String TEXT_48 = NL + "                 ";
  protected final String TEXT_49 = ".country_long=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='country']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_50 = NL + "                 ";
  protected final String TEXT_51 = ".postal_code_short=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='postal_code']/short_name\", response2);";
  protected final String TEXT_52 = NL + "                 ";
  protected final String TEXT_53 = ".postal_code_long=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/address_component[type/text()='postal_code']/long_name\", response2);" + NL + "                 ";
  protected final String TEXT_54 = NL + "                 ";
  protected final String TEXT_55 = ".location_type=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/type\", response2);";
  protected final String TEXT_56 = NL + "                 ";
  protected final String TEXT_57 = ".partial_match=\"\";" + NL + "                 ";
  protected final String TEXT_58 = NL + "                 ";
  protected final String TEXT_59 = ".formatted_address=xPath.evaluate(\"/PlaceDetailsResponse/result[1]/formatted_address\", response2);" + NL + "             } else if(\"REQUEST_DENIED\".equals(status2_";
  protected final String TEXT_60 = ")  || status2_";
  protected final String TEXT_61 = ".equals(\"OVER_QUERY_LIMIT\")) {" + NL + "                 System.err.println(status2_";
  protected final String TEXT_62 = " + \": \" + xPath2_";
  protected final String TEXT_63 = ".evaluate(\"/PlaceDetailsResponse/error_message\", response2));" + NL + "                 return;" + NL + "             }";
  protected final String TEXT_64 = NL + "             ";
  protected final String TEXT_65 = ".status=status2_";
  protected final String TEXT_66 = ";" + NL + "        } else if(\"ZERO_RESULTS\".equals(status) || \"INVALID_REQUEST\".equals(status)) {";
  protected final String TEXT_67 = NL + "            ";
  protected final String TEXT_68 = ".status=status;";
  protected final String TEXT_69 = NL + "            ";
  protected final String TEXT_70 = ".street_number_long = \"\";";
  protected final String TEXT_71 = NL + "            ";
  protected final String TEXT_72 = ".street_number_short = \"\";" + NL + "            ";
  protected final String TEXT_73 = NL + "            ";
  protected final String TEXT_74 = ".route_short =\"\";";
  protected final String TEXT_75 = NL + "            ";
  protected final String TEXT_76 = ".route_long =\"\";" + NL + "            ";
  protected final String TEXT_77 = NL + "            ";
  protected final String TEXT_78 = ".locality_short=\"\";";
  protected final String TEXT_79 = NL + "            ";
  protected final String TEXT_80 = ".locality_long=\"\";" + NL + "            ";
  protected final String TEXT_81 = NL + "            ";
  protected final String TEXT_82 = ".sublocality_short=\"\";";
  protected final String TEXT_83 = NL + "            ";
  protected final String TEXT_84 = ".sublocality_long=\"\";" + NL + "            ";
  protected final String TEXT_85 = NL + "            ";
  protected final String TEXT_86 = ".adm_area1_short=\"\";";
  protected final String TEXT_87 = NL + "            ";
  protected final String TEXT_88 = ".adm_area1_long=\"\";" + NL + "            ";
  protected final String TEXT_89 = NL + "            ";
  protected final String TEXT_90 = ".adm_area2_short=\"\";";
  protected final String TEXT_91 = NL + "            ";
  protected final String TEXT_92 = ".adm_area2_long=\"\";" + NL + "            ";
  protected final String TEXT_93 = NL + "            ";
  protected final String TEXT_94 = ".adm_area3_short=\"\";";
  protected final String TEXT_95 = NL + "            ";
  protected final String TEXT_96 = ".adm_area3_long=\"\";" + NL + "            ";
  protected final String TEXT_97 = NL + "            ";
  protected final String TEXT_98 = ".country_short=\"\";";
  protected final String TEXT_99 = NL + "            ";
  protected final String TEXT_100 = ".country_long=\"\";" + NL + "            ";
  protected final String TEXT_101 = NL + "            ";
  protected final String TEXT_102 = ".postal_code_short=\"\";";
  protected final String TEXT_103 = NL + "            ";
  protected final String TEXT_104 = ".postal_code_long=\"\";" + NL + "            ";
  protected final String TEXT_105 = NL + "            ";
  protected final String TEXT_106 = ".location_type=\"\";";
  protected final String TEXT_107 = NL + "            ";
  protected final String TEXT_108 = ".partial_match=\"\";" + NL + "            ";
  protected final String TEXT_109 = NL + "            ";
  protected final String TEXT_110 = ".formatted_address=\"\";" + NL + "        } else if(\"REQUEST_DENIED\".equals(status) || \"OVER_QUERY_LIMIT\".equals(status)) {" + NL + "            System.err.println(status + \": \" + xPath.evaluate(\"/PlaceSearchResponse/error_message\", response));" + NL + "            return;" + NL + "        }   ";
  protected final String TEXT_111 = NL + "                ";
  protected final String TEXT_112 = ".";
  protected final String TEXT_113 = " = ";
  protected final String TEXT_114 = ".";
  protected final String TEXT_115 = ";";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String inConnName = null;
String outConnName = null;
String method = ElementParameterParser.getValue(node, "__METHODNAME__");
String apiKey = ElementParameterParser.getValue(node, "__API_KEY__"); 

    stringBuffer.append(TEXT_2);
    stringBuffer.append( apiKey );
    stringBuffer.append(TEXT_3);
    stringBuffer.append( apiKey );
    stringBuffer.append(TEXT_4);
    
List<? extends IConnection> inConns = node.getIncomingConnections();
List<? extends IConnection> outConns = node.getOutgoingSortedConnections();
IConnection inConn = null;
IConnection outConn = null;
if(inConns != null && inConns.size() > 0) {
    inConn = inConns.get(0);
    inConnName = inConn.getName();
}
if(outConns != null && outConns.size() > 0) {
    outConn = outConns.get(0);
    if(outConn!=null && outConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)){
        outConnName = outConn.getName();
    }
}
if(inConnName!=null&&outConnName!=null){
    List<IMetadataColumn> columnList = inConn.getMetadataTable().getListColumns();
    String pause = ElementParameterParser.getValue(node, "__PAUSE__");
    if(inConnName != null && columnList != null && (columnList.size() > 0) ) {
        String latColumnSource = ElementParameterParser.getValue(node, "__LATITUDE_COLUMN__");
        String lngColumnSource = ElementParameterParser.getValue(node, "__LONGITUDE_COLUMN__");

    stringBuffer.append(TEXT_5);
    stringBuffer.append(inConnName);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(latColumnSource );
    stringBuffer.append(TEXT_7);
    stringBuffer.append(inConnName);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(lngColumnSource );
    stringBuffer.append(TEXT_9);
    stringBuffer.append( apiKey );
    stringBuffer.append(TEXT_10);
    stringBuffer.append(pause);
    stringBuffer.append(TEXT_11);
    stringBuffer.append( apiKey );
    stringBuffer.append(TEXT_12);
    stringBuffer.append(pause);
    stringBuffer.append(TEXT_13);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_15);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_16);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_17);
    stringBuffer.append(TEXT_18);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_19);
    stringBuffer.append(TEXT_20);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_21);
    stringBuffer.append(TEXT_22);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_23);
    stringBuffer.append(TEXT_24);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(TEXT_26);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_27);
    stringBuffer.append(TEXT_28);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_29);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_31);
    stringBuffer.append(TEXT_32);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_33);
    stringBuffer.append(TEXT_34);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_35);
    stringBuffer.append(TEXT_36);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_37);
    stringBuffer.append(TEXT_38);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_39);
    stringBuffer.append(TEXT_40);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_41);
    stringBuffer.append(TEXT_42);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_43);
    stringBuffer.append(TEXT_44);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_45);
    stringBuffer.append(TEXT_46);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_47);
    stringBuffer.append(TEXT_48);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_49);
    stringBuffer.append(TEXT_50);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_51);
    stringBuffer.append(TEXT_52);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_53);
    stringBuffer.append(TEXT_54);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_55);
    stringBuffer.append(TEXT_56);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_57);
    stringBuffer.append(TEXT_58);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_59);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_60);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_61);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_62);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_63);
    stringBuffer.append(TEXT_64);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_65);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_66);
    stringBuffer.append(TEXT_67);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_68);
    stringBuffer.append(TEXT_69);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_70);
    stringBuffer.append(TEXT_71);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_72);
    stringBuffer.append(TEXT_73);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_74);
    stringBuffer.append(TEXT_75);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_76);
    stringBuffer.append(TEXT_77);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_78);
    stringBuffer.append(TEXT_79);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_80);
    stringBuffer.append(TEXT_81);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_82);
    stringBuffer.append(TEXT_83);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_84);
    stringBuffer.append(TEXT_85);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_86);
    stringBuffer.append(TEXT_87);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_88);
    stringBuffer.append(TEXT_89);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_90);
    stringBuffer.append(TEXT_91);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_92);
    stringBuffer.append(TEXT_93);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_94);
    stringBuffer.append(TEXT_95);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_96);
    stringBuffer.append(TEXT_97);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_98);
    stringBuffer.append(TEXT_99);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_100);
    stringBuffer.append(TEXT_101);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_102);
    stringBuffer.append(TEXT_103);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_104);
    stringBuffer.append(TEXT_105);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_106);
    stringBuffer.append(TEXT_107);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_108);
    stringBuffer.append(TEXT_109);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_110);
      
        if (outConnName!=null) {
            for(IMetadataColumn metadataColumn : columnList) {        

    stringBuffer.append(TEXT_111);
    stringBuffer.append(outConnName);
    stringBuffer.append(TEXT_112);
    stringBuffer.append(metadataColumn.getLabel());
    stringBuffer.append(TEXT_113);
    stringBuffer.append(inConnName);
    stringBuffer.append(TEXT_114);
    stringBuffer.append(metadataColumn.getLabel());
    stringBuffer.append(TEXT_115);
    
            } 
        }
    }
}

    return stringBuffer.toString();
  }
}
